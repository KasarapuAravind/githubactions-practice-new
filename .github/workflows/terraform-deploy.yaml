name: Terraform deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'choose environment (Dev, Stage, Prod)'
        type: choice
        options: [dev, test, prod]
        required: true
        default: 'dev'
      image_tag:
        description: "Docker image tag (e.g. github.sha)"
        required: true
        default: "latest"
  
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}   # Example: OIDC role for GitHub
          aws-region: ${{ secrets.AWS_REGION }}

      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform plan -var="image_tag=${{ github.event.inputs.image_tag }}" -var-file=${{ github.event.inputs.environment }}.tfvars -out=tfplan

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/environments/${{ github.event.inputs.environment }}/tfplan

  
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}   # Example: OIDC role for GitHub
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download tfplan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform/environments/${{ github.event.inputs.environment }}

      - name: Terraform Init
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform apply -auto-approve tfplan



      