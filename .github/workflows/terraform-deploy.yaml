name: Terraform deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: choose environment
        type: choice
        options: [dev, test, prod]
        required: true
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: deployment to ${{ github.event.inputs.environment }}
    runs-on: self-hosted
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Install unzip (for self-hosted runner machine)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
        node-version: '18'

      - name: checkout code
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: terraform init
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform init

      - name: terraform validate
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform validate

      - name: terraform plan
        id: plan
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform plan -var-file=${{ github.event.inputs.environment }}.tfvars

      - name: terraform apply
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        run: terraform apply --auto-approve -var-file=${{ github.event.inputs.environment }}.tfvars



      